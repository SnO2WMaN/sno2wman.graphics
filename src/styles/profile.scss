@import './constants';
@import './colors';

$bg: hsl($base_hue, 8%, 8%);
$brandcolors: (
	twitter: #1da1f2,
	tumblr: #35465c,
	twitch: #6441a5,
	discord: #7289da,
	spotify: #1db954,
	steam: #2b3647,
	github: #24292e,
	codepen: #191a1d,
	mail: #d93025,
	amazon: #ff9900,
);

#profile {
	width: 100vw;
	height: 100vh;
	overflow-y: scroll;
	& > .bg {
		position: fixed;
		width: 100%;
		height: 100vh;
		background: $bg;
		& > .pattern {
			position: absolute;
			size: 100%;
			background-image: url('../assets/pattern/13_point_w.png');
			background-repeat: repeat;
			opacity: 0.1;
		}
	}
	& > .card {
		position: absolute 0;
		margin: auto;
		z-index: 1;
		width: $mq-mobile;
		height: ($mq-mobile / metallic(1));
		background: rgba(white, 0.1);
		display: flex;
		transform: scaleX(0);
		transition-property: transform;
		transition-duration: 0.8s;
		transition-timing-function: cubic-bezier(1, 0.085, 0.355, 0.95);
		&.animate {
			transform: scaleX(1);
		}
		& > .social {
			position: relative;
			size: ($mq-mobile / metallic(1));
			overflow: hidden;
			&:before {
				content: '';
				position: absolute;
				size: 100% * sqrt(2);
				top: ((1 - sqrt(2)) / 2) * 100%;
				left: ((1 - sqrt(2)) / 2) * 100%;
				background: conic-gradient(from -22.5deg, white, black);
				z-index: 0;
				opacity: 0;
				transform: rotate(-1turn);
				transition-property: transform, opacity;
				transition-duration: 1s;
				transition-timing-function: cubic-bezier(1, 0.085, 0.355, 0.95);
			}
			&.animate {
				&:before {
					opacity: 0.25;
					transform: rotate(0);
				}
			}
			& > canvas {
				position: absolute;
				size: 100%;
				top: 0;
				left: 0;
				z-index: 1;
			}
			& > .links {
				position: absolute 0;
				margin: auto;
				size: (100% / metallic(1));
				z-index: 2;
				& > li {
					$size: 3.6rem;
					$links: 9;
					position: absolute;
					size: $size;
					opacity: 0;
					transform: translateY(25%);
					transition-property: transform, opacity;
					transition-duration: 0.5s;
					transition-timing-function: $easeInOutCubic;
					&.clipboard {
						cursor: pointer;
					}
					&:before {
						content: '';
						position: absolute;
						left: 0;
						right: 0;
						bottom: 0;
						margin: auto;
						width: (100% / (metallic(1) + 1));
						z-index: 0;
						border-bottom: 2px solid;
						transition-property: transform;
						transition-duration: 0.125s;
						transition-timing-function: $easeInOutQuad;
					}
					&:after {
						content: '';
						position: absolute;
						border-radius: 50%;
						background: rgba(black, 0.1);
						z-index: 0;
						size: 100%;
						opacity: 0;
						transition-property: opacity;
						transition-duration: 0.1s;
						transition-timing-function: $easeInOutQuad;
					}
					&:hover {
						&:before {
							transform: scaleX(1.5);
						}
					}
					&:active {
						&:after {
							opacity: 1;
						}
					}
					& > .link {
						content: '';
						position: absolute 0;
						size: 100%;
						z-index: 5;
					}
					& > .icon-wrap {
						position: absolute;
						z-index: 1;
						size: 100%;
						display: flex;
						justify-content: center;
						align-items: center;
						font-size: 1.4rem;
					}
					& > .guide {
						position: absolute;
						top: 0;
						right: 0;
						color: white;
						font-size: 0.75rem;
						opacity: 0.25;
					}
					@each $brand
						in (
							'tumblr',
							'steam',
							'mail',
							'discord',
							'twitter',
							'spotify',
							'twitch',
							'codepen',
							'github'
						)
					{
						&.#{$brand} {
							$rotate: 29deg;
							$mix: 15%;
							&:before {
								border-bottom-color: map-get(
									$brandcolors,
									$brand
								);
							}
							& > .icon-wrap {
								color: mix(
									white,
									map-get($brandcolors, $brand),
									80%
								);
							}
						}
					}
					@for $i from 0 to $links {
						&:nth-of-type(#{$i + 1}) {
							$deg: $i / $links * 360deg - (360deg / $links);
							$sin: sin($deg);
							$cos: cos($deg);
							top: calc(#{50% + $sin * 50%} - #{$size} / 2);
							left: calc(#{50% + $cos * 50%} - #{$size} / 2);
							transition-delay: $i * 0.075s;
						}
					}
				}
			}
			&.animate {
				& > .links {
					& > li {
						opacity: 1;
						transform: translate(0);
					}
				}
			}
		}
		& > .prof {
			width: ($mq-mobile / (metallic(1) + 1));
			height: 100%;
			& > .top {
				width: 100%;
				height: (100% / (metallic(1) + 1));
				background-color: transparent;
				display: flex;
				flex-direction: column;
				justify-content: center;
				align-items: center;
				user-select: none;
				position: relative;
				transition-property: background-color;
				transition-duration: 0.2s;
				transition-delay: 1.1s;
				transition-timing-function: linear;
				&.animate {
					background-color: rgba(white, 0.1);
				}
				& > .covers {
					position: absolute;
					size: 100%;
					overflow: hidden;
					& > .cover {
						position: absolute;
						size: 100%;
						background: rgba(white, 0.1);
						transform: translateX(-100%);
						transition-property: transform;
						transition-duration: 0.8s;
						transition-timing-function: cubic-bezier(
							1,
							0.085,
							0.355,
							0.95
						);
						transform-origin: left;

						@for $i from 0 to 2 {
							&:nth-of-type(#{$i + 1}) {
								transition-delay: 0.4s + $i * 0.1s;
							}
						}
					}
				}
				&.animate {
					& > .covers {
						& > .cover {
							transform: translateX(100%);
						}
					}
				}
				& > p {
					transform: translateY(-50%);
					opacity: 0;
					transition-property: transform, opacity;
					transition-duration: 0.5s;
					transition-timing-function: cubic-bezier(
						1,
						0.085,
						0.355,
						0.95
					);
					&:nth-of-type(1) {
						color: rgba(white, 0.8);
						font-size: 2rem;
						font-family: 'Dosis', sans-serif;
						letter-spacing: 0.25rem;
						margin-bottom: 0.5rem;
					}
					&:not(:nth-of-type(1)) {
						color: rgba(white, 0.5);
						font-size: 0.9rem;
						font-family: 'Assistant', sans-serif;
						letter-spacing: 0.05rem;
					}
					&:not(:last-of-type) {
						margin-bottom: 0.125rem;
					}
					@for $i from 0 to 3 {
						&:nth-of-type(#{$i + 1}) {
							transition-delay: 1.2s + $i * 0.05s;
						}
					}
				}
				&.animate {
					& > p {
						transform: translateY(0);
						opacity: 1;
					}
				}
			}
			& > .bottom {
				width: 100%;
				height: (100% / metallic(1));
				position: relative;
				&.scrollable {
					overflow-y: scroll;
				}
				& > canvas {
					position: absolute;
					top: 0;
					left: 0;
					size: 100%;
				}
				& > section {
					height: 100%;
					padding: 0 3rem;
					display: flex;
					overflow: hidden;
					flex-direction: column;
					align-items: center;
					justify-content: center;
					position: relative;
					z-index: 1;
					& > .title {
						font-family: 'Poppins', sans-serif;
						color: rgba(white, 0.75);
						font-size: 1.125rem;
						letter-spacing: 0.4rem;
						margin-bottom: 1rem;
						font-weight: 400;
						user-select: none;
						& > span {
							display: inline-block;
							transform: translateY(25%);
							opacity: 0;
							transition-property: transform, opacity;
							transition-duration: 0.25s;
							transition-timing-function: $easeInOutCubic;
							@for $i from 0 to 12 {
								&:nth-of-type(#{$i + 1}) {
									transition-delay: 0.5s + $i * 0.05s;
								}
							}
						}
					}
					&.animate {
						& > .title {
							& > span {
								opacity: 1;
								transform: translate(0);
							}
						}
					}
				}
				& > .description {
					& > .text {
						width: 100%;
						& > p {
							font-family: 'Sawarabi Gothic', serif;
							font-feature-settings: 'palt';
							font-size: 0.8rem;
							letter-spacing: 1px;
							color: rgba(white, 0.5);
							position: relative;
							transform: translateX(-5%);
							opacity: 0;
							transition-property: transform, opacity;
							transition-duration: 0.5s;
							transition-timing-function: $easeOutCubic;
							@for $i from 0 to 5 {
								&:nth-of-type(#{$i + 1}) {
									transition-delay: 1s + $i * 0.05s;
								}
							}
							&:not(:last-of-type) {
								margin-bottom: 0.5rem;
							}
						}
					}
					&.animate {
						& > .text {
							& > p {
								opacity: 1;
								transform: translateX(0);
							}
						}
					}
				}
				& > .details {
					& > ul {
						width: 100%;
						display: flex;
						flex-direction: column;
						& > li {
							width: 100%;
							display: flex;
							align-items: center;
							&:not(:last-of-type) {
								margin-bottom: 1rem;
							}
							& > .left,
							& > .right {
								width: 50%;
							}
							& > .left {
								display: flex;
								align-items: center;
								user-select: none;
								& > .icon-wrap {
									font-size: 1rem;
									color: rgba(white, 0.375);
									margin-right: 0.75rem;
								}
								& > p {
									font-family: 'Poppins', sans-serif;
									color: rgba(white, 0.375);
									font-size: 0.7rem;
									letter-spacing: 0.2rem;
								}
							}
							& > .right {
								display: flex;
								justify-content: flex-end;
								& > p {
									font-family: 'Assistant', sans-serif;
									color: rgba(white, 0.5);
									font-size: 1rem;
									letter-spacing: 0.05rem;
								}
							}
							@for $i from 0 to 5 {
								&:nth-of-type(#{$i + 1}) {
									& > .left {
										& > .icon-wrap {
											opacity: 0;
											transform: translateX(-50%);
											transition-property: transform,
												opacity;
											transition-duration: 0.5s;
											transition-delay: 0.5s +
												($i * 0.1s);
											transition-timing-function: ease;
										}
										& > p {
											opacity: 0;
											transform: translateY(25%);
											transition-property: transform,
												opacity;
											transition-duration: 0.75s;
											transition-delay: 0.5s +
												($i * 0.1s);
											transition-timing-function: $easeOutCubic;
										}
									}
									& > .right {
										opacity: 0;
										transform: translateX(25%);
										transition-property: transform, opacity;
										transition-duration: 0.75s;
										transition-delay: 0.5s + ($i * 0.1s);
										transition-timing-function: $easeOutCubic;
									}
								}
							}
						}
					}
					&.animate {
						& > ul {
							& > li {
								& > .left {
									& > .icon-wrap {
										opacity: 1;
										transform: translateY(0);
									}
									& > p {
										opacity: 1;
										transform: translateY(0);
									}
								}
								& > .right {
									opacity: 1;
									transform: translateX(0);
								}
							}
						}
					}
				}
				& > .donation {
					& > .wishlists {
						display: flex;
						flex-direction: column;
						opacity: 0;
						transition-property: opacity;
						transition-duration: 0.3s;
						transition-delay: 0.125s;
						transition-timing-function: $easeInOutQuad;
						& > li {
							position: relative;
							display: flex;
							flex-direction: row;
							align-items: center;
							background: rgba(white, 0.25);
							transition-property: background-color;
							transition-duration: 0.05s;
							transition-timing-function: $easeInOutQuad;

							user-select: none;
							& > a {
								position: absolute 0;
								size: 100%;
								z-index: 2;
								visibility: hidden;
							}

							& > .icon-wrap {
								position: relative;
								size: 2.75rem;
								display: flex;
								justify-content: center;
								align-items: center;
								font-size: 1.5rem;
								color: white;
								overflow: hidden;
								&:before {
									content: '';
									position: absolute;
									size: (100% * sqrt(2));
									top: (50% * (1 - sqrt(2)));
									left: (50% * (1 - sqrt(2)));
									border-radius: 50%;
									z-index: 0;
								}
							}
							& > p {
								height: 100%;
								padding: 0 1.5rem;
								font-family: 'Sawarabi Gothic', serif;
								font-feature-settings: 'palt';
								font-size: 0.8rem;
								letter-spacing: 1px;
								color: rgba(white, 0.75);
							}
							&:not(:last-of-type) {
								margin-bottom: 1rem;
							}
							@each $brand in ('amazon', 'steam') {
								&.#{$brand} {
									& > .icon-wrap {
										&:before {
											background: rgba(
												map-get($brandcolors, $brand),
												0.5
											);
										}
									}
								}
							}
							@for $i from 0 to 5 {
								&:nth-of-type(#{$i + 1}) {
									& > .icon-wrap {
										transform: scale(0);
										opacity: 0;
										transition-property: transform, opacity;
										transition-duration: 0.5s;
										transition-delay: 0.25s + ($i * 0.1s);
										transition-timing-function: $easeInQuint;

										&:before {
											transform: scale(0);
											opacity: 0;
											transition-property: transform,
												opacity;
											transition-duration: 0.5s;
											transition-delay: 0.75s +
												($i * 0.1s);
											transition-timing-function: $easeOutQuint;
										}
									}
									& > p {
										transform: translateY(50%);
										opacity: 0;
										transition-property: transform, opacity;
										transition-duration: 0.75s;
										transition-delay: 0.5s + ($i * 0.1s);
										transition-timing-function: $easeOutCubic;
									}
								}
							}
						}
					}
					&.animate {
						& > .wishlists {
							opacity: 1;
							& > li {
								& > .icon-wrap {
									transform: scale(1);
									opacity: 1;

									&:before {
										transform: scale(1);
										opacity: 1;
									}
								}
								& > p {
									opacity: 1;
									transform: translateY(0);
								}
								&:hover,
								&:active {
									background: rgba(white, 0.4);
								}
								& > a {
									visibility: visible;
								}
							}
						}
					}
				}
			}
		}
		@media screen and (min-width: $mq-mobile) {
			& > .prof {
				& > .bottom {
					&::-webkit-scrollbar {
						width: 0.3rem;
					}
					&::-webkit-scrollbar-button {
						display: none;
					}
					&::-webkit-scrollbar-track {
						background: rgba(black, 0.25);
					}
					&::-webkit-scrollbar-thumb {
						background-color: rgba(white, 0.25);
					}
				}
			}
		}
		@media screen and (max-width: $mq-mobile) {
			background: transparent;
			size: 100%;
			flex-direction: column;
			$sections: 3;
			& > .prof {
				background: rgba(white, 0.125);
				& > .top {
					height: 0;
					visibility: hidden;
				}
				& > .bottom {
					height: 100%;
					display: flex;
					& > .description {
						& > .text {
							padding: 0;
							background: none;
							& > p {
								text-align: center;
								color: rgba(white, 0.5);
								&:not(:last-of-type) {
									margin-bottom: 0.5rem;
								}
							}
						}
					}
				}
			}
			@media (orientation: portrait) {
				flex-direction: column;
				& > .social {
					size: 100vw;
				}
				& > .prof {
					width: 100vw;
					height: calc(100vh - 100vw);
					& > .bottom {
						&.scrollable {
							overflow-x: scroll;
							overflow-y: hidden;
						}
						& > section {
							min-width: 100vw;
							max-width: 100vw;
							padding: 0 (100vw / (metallic(1) + 1) / 2);
						}
					}
				}
			}
			@media (orientation: landscape) {
				flex-direction: row;
				& > .social {
					size: 100vh;
				}
				& > .prof {
					width: calc(100vw - 100vh);
					height: 100vh;
					& > .bottom {
						height: 100vh;
						flex-direction: column;
						&.scrollable {
							overflow-x: hidden;
							overflow-y: scroll;
						}
						display: block;
						& > section {
							height: 100vh;
							padding: 0 2rem;
						}
					}
				}
			}
		}
	}
}
